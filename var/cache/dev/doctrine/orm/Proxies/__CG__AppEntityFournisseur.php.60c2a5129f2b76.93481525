<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Fournisseur extends \App\Entity\Fournisseur implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'codeFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'nomFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'company', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'telFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'mailFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'adresseFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'fournisseurBdc'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'codeFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'nomFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'company', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'telFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'mailFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'adresseFourn', '' . "\0" . 'App\\Entity\\Fournisseur' . "\0" . 'fournisseurBdc'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Fournisseur $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getCodeFourn(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCodeFourn', []);

        return parent::getCodeFourn();
    }

    /**
     * {@inheritDoc}
     */
    public function setCodeFourn(int $codeFourn): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCodeFourn', [$codeFourn]);

        return parent::setCodeFourn($codeFourn);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomFourn(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomFourn', []);

        return parent::getNomFourn();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomFourn(string $nomFourn): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomFourn', [$nomFourn]);

        return parent::setNomFourn($nomFourn);
    }

    /**
     * {@inheritDoc}
     */
    public function getCompany(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCompany', []);

        return parent::getCompany();
    }

    /**
     * {@inheritDoc}
     */
    public function setCompany(string $company): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCompany', [$company]);

        return parent::setCompany($company);
    }

    /**
     * {@inheritDoc}
     */
    public function getTelFourn(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTelFourn', []);

        return parent::getTelFourn();
    }

    /**
     * {@inheritDoc}
     */
    public function setTelFourn(int $telFourn): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTelFourn', [$telFourn]);

        return parent::setTelFourn($telFourn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMailFourn(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMailFourn', []);

        return parent::getMailFourn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMailFourn(?string $mailFourn): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMailFourn', [$mailFourn]);

        return parent::setMailFourn($mailFourn);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdresseFourn(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdresseFourn', []);

        return parent::getAdresseFourn();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdresseFourn(string $adresseFourn): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdresseFourn', [$adresseFourn]);

        return parent::setAdresseFourn($adresseFourn);
    }

    /**
     * {@inheritDoc}
     */
    public function getFournisseurBdc(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFournisseurBdc', []);

        return parent::getFournisseurBdc();
    }

    /**
     * {@inheritDoc}
     */
    public function addFournisseurBdc(\App\Entity\BondeCommande $fournisseurBdc): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFournisseurBdc', [$fournisseurBdc]);

        return parent::addFournisseurBdc($fournisseurBdc);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFournisseurBdc(\App\Entity\BondeCommande $fournisseurBdc): \App\Entity\Fournisseur
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFournisseurBdc', [$fournisseurBdc]);

        return parent::removeFournisseurBdc($fournisseurBdc);
    }

}
